/* in practice, we mostly use hexadecimal colors, and rgba when we need transparency 
- black 0, 0, 0
- white 255, 255, 255
- gray 4, 4, 4 >> #444 >> same code in between 0 & 255
*/

/* Inheritance vs Universal Selector */

* {
  /* 
    universal selector: no inheritance >> just apply to all elements >> easy to overwrite
    every single element will have border-top 
  */
  /* border-top: 5px solid #7ea690; */
  margin: 0;
  padding: 0;
}
/* 
  not every properties are inheritted >> just text, color properties are inheritted 
  NOT INHERITTED: border
*/
/* || ======================= GENERAL ======================= || */
body {
  font-family: sans-serif;
  color: #444; /* effected, but it is easy to be overwritten by the other rule*/
  border-top: 5px solid #7ea690; /* not inheritted, just appears on the top of the site >> if we put it on the universal selector, it will be inheritted to all elements*/
  position: relative;
}

/* ======================== PAGE SECTIONS ====================== */

.container {
  width: 800px;
  margin: 0 auto;
}

nav {
  font-size: 18px;
}

.main-header {
  background-color: #f7f7f7;
  padding: 20px 40px; /*topbot leftright*/
  margin-bottom: 60px;
  height: 80px;
}

.post-header {
  margin-bottom: 40px;
}

article {
  margin-bottom: 60px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #7ea690;
  border-bottom: 5px solid #7ea690;
  padding: 50px 20px;
  width: 500px;
}

#author {
  font-style: italic;
  font-size: 18px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.post-img {
  width: 100%;
  height: auto;
}

/* ul {
  list-style: none;
} */

/*  
  why we use class in this case? There is only 1 <ul> that we want with this style.
  - The reason is in the real world, we almost never use id. We always use class to prepare for the future 
*/
.related {
  list-style: none;
}

/* select <p> that is the first child of the <article> >> but because the 1st child of the <article> is the <header>, so it does not affect anything
  If we add <p> as the first child of <article>, it will work normally

  >> we should use the pseudo class in the case that all the chilren are the same tag (i.e: <ul> <li>, <ol> <li>
*/
article p:first-child {
  color: red;
}

article p:last-child {
  color: red;
}

/* Conflicts between Selectors (Multiple styles apply to 1 selector)
- same kind of selectors >> then the last will apply

1) !important (not recommened) 
2) Inline Style
3) ID
4) Class or Pseudo Class
5) Element 
6) Universal (*) 
*/
#copyright {
  color: black;
}

.copyright {
  color: blue;
}

.text {
  color: yellow;
}

footer p {
  color: green;
}

/* ======================= SMALLER ELEMENTS ===================== */

h1,
h2,
h3 {
  color: #7ea690;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5; /* no unit >> 1.5 * font-size >> default = 1 */
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  /* usually, we don't want margin-bot for the last item in <li>, we just want space between each <li> >>> use pseudo class */
  margin-bottom: 10px;
}

li:last-child {
  margin-bottom: 0;
}

/* .first-li {
  font-weight: bold;
} */

/* pseudo CLASS */
/* using pseudo class instead of setting class */
li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

/* 2nd child */
li:nth-child(2) {
  color: #222;
}

/* odd || even */
li:nth-child(odd) {
  color: #111;
}

/* styling Links */
/* we don't do this >> don't style just the <a>, but we must style based on the states of the links */
/* a {
  color: #7ea690;
} */

/* target the one which has href attribute, won't affect the <a> which does not have the href attribute */
nav a:link {
  color: #7ea690;
  text-decoration: none;
  margin: 20px; /*horizontal only*/
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

a:visited {
  color: #7ea690;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline wavy orangered;
}

a:active {
  color: yellow;
  font-style: italic;
  background-color: black;
}

/*text in <p> in <footer> normally are smaller than the others*/
/* decendent selectors: all elements that are children of <footer> */
/* footer p {
  font-size: 16px;
} */
#copyright {
  font-size: 16px;
}
/* hard to read >> use ID & class */
/* article header p {
  font-style: italic;
} *
*/

/* ABSOLUTE POSITION */
button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  bottom: 50px;
  right: 50px;
}

h2 {
  position: relative;
}

h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

h2::after {
  content: "TOP"; /*mandatory*/
  background-color: lightgoldenrodyellow;
  color: black;
  font-size: 16px;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: 5px;
}
